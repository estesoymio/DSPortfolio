# -*- coding: utf-8 -*-
"""Car_Rental.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sumpjig7T5V0Uw0CddAAlJ5VHlmzubuG
"""

from datetime import datetime as dt
class car_rent:
  def __init__(self,cars):
    self.total_cars=cars
    self.avl_cars=cars
    self.rented_cars={}
    self.mode={"hourly":50,"daily":100,"weekly":500}


  def display_car(self):
    print(self.avl_cars)

  def rent_car(self,rental_units,rental_mode):
    if rental_units>self.avl_cars:
      print("No cars available")
    else:
      self.avl_cars=self.avl_cars-rental_units
      print(self.avl_cars)
      rent_time=dt.now()
      self.rented_cars[rent_time]={"rental_units":rental_units,"rental_mode":rental_mode}
      print(f"Renting {rental_units} cars on a {rental_mode} basis on {rent_time}")



  def return_car(self,rental_units):
    if self.rented_cars and rental_units<=sum(entry["rental_units"] for entry in self.rented_cars.values()):
       self.avl_cars=self.avl_cars+rental_units
       return_time=dt.now()
       bill=[]
       for rent_time,entry in self.rented_cars.items():
         rental_period=return_time-rent_time
         rented_hours=rental_period.seconds/3600*self.mode[entry["rental_mode"]]*entry["rental_units"]
         bill.append(rented_hours)
    total_bill=round(sum(bill),2)
    print(f"{rental_units} cars returned at {return_time} and the total bill is ${total_bill}")

k=car_rent(10)

k.display_car()

k.rent_car(2,"hourly")

# k.rent_car(2,"daily")

# k.return_car(2)

# k.display_car()

